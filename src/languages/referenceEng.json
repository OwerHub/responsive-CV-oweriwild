{
	"title": "References",
	"referenceList": [

		{
			"name": "Responsive CV",
			"version": "1.0",
			"date": "2021 10 21",
			"pictureNumber": 0,
			"icons": ["js", "tailwind", "react"],
			"description": "An online CV with some extra features… Option to change between Hungarian and English display languages, dark and light mode while it is fully responsive. There is no hard-coded data in the code which means it is easier to migrate it to an environment where a backend server would serve every bit of data needed for the frontend. ",
			"features": {
				"title": "Features",
				"datas": [
					"Change display language between Hungarian and English",
					"sötét/világos módok",
					"Support for mobile displays (300px width and upwards)",
					"Fully responsive layout",
					"Tailwind.CSS használata",
					"Code is easy to maintain thanks to JSON files and no hardcoded data in the display code"
				]
			},
			"technologies": {
				"title": "Used Technologies",
				"technologieList": [{
					"title": "Frontend",
					"techs": ["Javascript", "React", "Tailwind", "SVG"]
				}]
			},
			"publics": [
				["github", "OwerHub/responsive-CV-oweriwild", "https://github.com/OwerHub/responsive-CV-oweriwild"]
			]
		},
		{
			"name": "HoolieDayz",
			"version": "0.8",
			"date": "2021 8 28",
			"pictureNumber": 1,
			"icons": ["css", "sass", "js", "react", "node", "mongoDb", "docker"],
			"description": "This is an older pet project which became my exam work for the backend/API course. The current version is compliant with the exam requirements and thus focuses on the backend solutions while containing many unused functions. These will be removed at a later date. The program works by logging in with google and creating custom holidays. We can then sort these into different categories and save them to mongoDB database. We can also export them to our google calendar in a custom layer. Tests were written for all of the backend endpoints and swagger documentation was made as well. To run the repo cloned from github you just need environmental variables and docker runs immediately on port 3000.",
			"features": {
				"title": "Features",
				"datas": [
					"Google Login",
					"Support for mobile displays (300px width and upwards)",
					"Creating/deleting/editing custom holidays. Changes immediately sync to an online database.",
					"Save holidays into google calendar through API",
					"Sort holidays. Groups are saved in the database so they can be changed on-demand in a later version",
					"Sorting can be done by date, remaining time and alphabetically as well. Visible groups can be toggled on and off individually.",
					"Fully tested backend endpoints and Swagger documentation",
					"Sustainable and extendable code and MVC pattern"
				]
			},

			"technologies": {
				"title": "Used Technologies",
				"technologieList": [{
					"title": "Frontend",
					"techs": ["CSS", "SASS", "Javasript", "React", "Docker/Compose"]
				}, {
					"title": "Backend",
					"techs": ["NodeJs", "ExpressJS", "MongoDB", "Mongoose", "Swagger", "Jest/supertest/memoryServer", "Google API", "JWT", "Dotenv", "Docker/Compose"]
				}]

			},
			"publics": [
				["github", "OwerHub/HolyDay", "https://github.com/OwerHub/HolyDay"]

			]
		},
		{
			"name": "Parallax Pizza",
			"version": "0.8",
			"date": "2021 8 28",
			"pictureNumber": 2,
			"icons": ["css", "sass", "js", "react", "node"],
			"description": "This was a full-stack project during the course and was made for a competition focused on design. On the responsive layout different elements slide and fade towards the user. The navbar reacts to the scrolling position and the svg illustrations change based on the cursor position. Booking a table saves your selection into a json file and updates the available tables",
			"features": {
				"title": "Features",
				"datas": [
					"Supports mobile displays from 350px width",
					"Parallax, elements react to scrolling",
					"Navbar text dynamically changes  based on scrolling position",
					"Functional table booking system",
					"Booked tables are not selectable",
					"SVG icons react to cursor movement"
				]
			},
			"technologies": {
				"title": "Used Technologies",
				"technologieList": [{
						"title": "Frontend",
						"techs": ["CSS", "SASS", "Javascript", "React", "Styled Components", "SVG"]
					},
					{
						"title": "Backend",
						"techs": ["NodeJs", "ExpressJs"]
					}
				]

			},
			"publics": [
				["github", "PizzaParallax", "https://github.com/OwerHub/PizzaParallax"]
			]
		}




	]
}